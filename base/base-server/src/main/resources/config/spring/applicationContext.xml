<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
     xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
     http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-2.5.xsd"  default-autowire="byName">
		
	<context:component-scan base-package="com.base"/>
	
	<bean id="configurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
	    <property name="locations"> 
	          <value>classpath:/dbconfig.properties</value> 
	    </property> 
	</bean>	
	<!-- 数据源定义,使用c3p0 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${alsdb.jdbc.driver}" />	
		<property name="jdbcUrl" value="${alsdb.jdbc.url}" />	
		<property name="user" value="${alsdb.jdbc.username}" />	
		<property name="password" value="${alsdb.jdbc.password}" />		
		<property name="initialPoolSize" value="${cpool.minPoolSize}"/>	
		<property name="minPoolSize" value="${cpool.minPoolSize}" />	
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />	
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" /> 
	    <property name="maxIdleTime" value="${cpool.maxIdleTime}"/>   
	</bean>		
 	
		<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	        <tx:method name="get*" read-only="true"/>
	        <tx:method name="find*" read-only="true"/>
	        <tx:method name="query*" read-only="true"/>
			<tx:method name="save*" rollback-for="Throwable" />
			<tx:method name="insert*" rollback-for="Throwable" />
			<tx:method name="update*" rollback-for="Throwable" />
			<tx:method name="delete*" rollback-for="Throwable" />	        
	    </tx:attributes>
	</tx:advice>
	
	<!-- myBatis文件 -->
	<bean id="alsSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描映射文件目录, 省掉Configuration.xml里的手工配置
			<property name="configLocation" value="classpath:spring/mybatis-config.xml" />
		 -->
		<property name="mapperLocations" value="classpath:com/billionsfinance/als/dao/mapper/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.billionsfinance.als.dao" />
		<property name="sqlSessionFactoryBeanName" value="alsSqlSessionFactory" />
	</bean>
	 
	<aop:config proxy-target-class="true">
	    <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.billionsfinance.als.service..*Service*.*(..))" />
	</aop:config>	
	
    <import resource="classpath:spring/als-service.xml"/>
    
</beans>